{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","_ref","total","perPage","currentPage","onPageChange","pages","Math","ceil","pageNumbers","i","push","_jsxs","className","children","_jsx","cn","disabled","href","onClick","map","page","active","concat","setPage","items","from","to","numbers","n","getNumbers","length","App","setPerPage","useState","setCurrentPage","firstItem","lastItem","visibleItems","slice","id","name","value","onChange","event","Number","target","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"uLAUO,MAAMA,EAA8BC,IAKpC,IALqC,MAC1CC,EAAK,QACLC,EAAO,YACPC,EAAW,aACXC,GACDJ,EACC,MAAMK,EAAQC,KAAKC,KAAKN,EAAQC,GAC1BM,EAAc,GAEpB,IAAK,IAAIC,EAAI,EAAGA,GAAKJ,EAAOI,GAAK,EAC/BD,EAAYE,KAAKD,GAOnB,OACEE,eAAA,MAAIC,UAAU,aAAYC,SAAA,CACxBC,cAAA,MAAIF,UAAWG,IAAG,YAAa,CAAEC,SAA0B,IAAhBb,IAAqBU,SAC9DC,cAAA,KACE,UAAQ,WACRF,UAAU,YACVK,KAAK,QACL,gBAA+B,IAAhBd,EACfe,QAASA,KACHf,EAAc,GAChBC,EAAaD,EAAc,IAE7BU,SACH,WAKFL,EAAYW,KAAIC,GAEbN,cAAA,MAEEF,UAAWG,IAAG,YAAa,CAAEM,OAAQlB,IAAgBiB,IAAQP,SAE7DC,cAAA,KACE,UAAQ,WACRF,UAAU,YACVK,KAAI,IAAAK,OAAMF,GACVF,QAASA,IAhCJE,KACfhB,EAAagB,IA+BYG,CAAQH,GAAMP,SAE5BO,KATEA,KAcXN,cAAA,MAAIF,UAAWG,IAAG,YAAa,CAAEC,SAAUb,IAAgBE,IAASQ,SAClEC,cAAA,KACE,UAAQ,WACRF,UAAU,YACVK,KAAK,QACL,gBAAed,IAAgBE,EAC/Ba,QAASA,KACHf,EAAcE,GAChBD,EAAaD,EAAc,IAE7BU,SACH,eCnEHW,ECNC,SAAoBC,EAAcC,GACvC,MAAMC,EAAU,GAEhB,IAAK,IAAIC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQjB,KAAKkB,GAGf,OAAOD,EDDKE,CAAW,EAAG,IAAIV,KAAIS,GAAC,QAAAN,OAAYM,KAC3C3B,EAAQuB,EAAMM,OAEPC,EAAgBA,KAC3B,MAAO7B,EAAS8B,GAAcC,mBAAS,IAChC9B,EAAa+B,GAAkBD,mBAAS,GACzCE,EAAYjC,GAAWC,EAAc,GACrCiC,EAAWD,EAAYjC,EACvBmC,EAAeb,EAAMc,MAAMH,EAAWC,GAS5C,OACEzB,eAAA,OAAKC,UAAU,YAAWC,SAAA,CACxBC,cAAA,MAAAD,SAAI,0BAEJF,eAAA,KAAGC,UAAU,OAAO,UAAQ,OAAMC,SAAA,CAAC,QAC3BV,EAAY,WAASgC,EAAY,EAAE,KAAG,IAC3CC,EAAW,GAAK,GAAKA,EAAS,OAAKnC,EAAM,OAG5CU,eAAA,OAAKC,UAAU,iBAAgBC,SAAA,CAC7BC,cAAA,OAAKF,UAAU,0BAAyBC,SACtCF,eAAA,UACE,UAAQ,kBACR4B,GAAG,kBACH3B,UAAU,eACV4B,KAAK,WACLC,MAAOvC,EACPwC,SAxBV,SACEC,GAEAX,EAAWY,OAAOD,EAAME,OAAOJ,QAC/BP,EAAe,IAoB+BrB,SAAA,CAEtCC,cAAA,UAAQ2B,MAAM,IAAG5B,SAAC,MAClBC,cAAA,UAAQ2B,MAAM,IAAG5B,SAAC,MAClBC,cAAA,UAAQ2B,MAAM,KAAI5B,SAAC,OACnBC,cAAA,UAAQ2B,MAAM,KAAI5B,SAAC,YAIvBC,cAAA,SAAOgC,QAAQ,kBAAkBlC,UAAU,qBAAoBC,SAAC,sBAKlEC,cAACf,EAAU,CACTE,MAAOA,EACPC,QAASA,EACTC,YAAaA,EACbC,aAAcgB,GAAQc,EAAed,KAEtCiB,EAAalB,KAAI4B,GAEdjC,cAAA,MAAe,UAAQ,OAAMD,SAC1BkC,GADMA,SE3DnBC,IAASC,OAAOnC,cAACiB,EAAG,IAAKmB,SAASC,eAAe,U","file":"static/js/main.9a86e6eb.chunk.js","sourcesContent":["import cn from 'classnames';\nimport React from 'react';\n\ntype Props = {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (page: number) => void;\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const pages = Math.ceil(total / perPage);\n  const pageNumbers = [];\n\n  for (let i = 1; i <= pages; i += 1) {\n    pageNumbers.push(i);\n  }\n\n  const setPage = (page: number) => {\n    onPageChange(page);\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li className={cn('page-item', { disabled: currentPage === 1 })}>\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={currentPage === 1}\n          onClick={() => {\n            if (currentPage > 1) {\n              onPageChange(currentPage - 1);\n            }\n          }}\n        >\n          «\n        </a>\n      </li>\n\n      {pageNumbers.map(page => {\n        return (\n          <li\n            key={page}\n            className={cn('page-item', { active: currentPage === page })}\n          >\n            <a\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n              href={`#${page}`}\n              onClick={() => setPage(page)}\n            >\n              {page}\n            </a>\n          </li>\n        );\n      })}\n      <li className={cn('page-item', { disabled: currentPage === pages })}>\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={currentPage === pages}\n          onClick={() => {\n            if (currentPage < pages) {\n              onPageChange(currentPage + 1);\n            }\n          }}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42).map(n => `Item ${n}`);\nconst total = items.length;\n\nexport const App: React.FC = () => {\n  const [perPage, setPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n  const firstItem = perPage * (currentPage - 1);\n  const lastItem = firstItem + perPage;\n  const visibleItems = items.slice(firstItem, lastItem);\n\n  function handlePerPageSelectorChange(\n    event: React.ChangeEvent<HTMLSelectElement>,\n  ) {\n    setPerPage(Number(event.target.value));\n    setCurrentPage(1);\n  }\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        Page {currentPage} (items {firstItem + 1} -{' '}\n        {lastItem > 42 ? 42 : lastItem} of {total})\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            name=\"selector\"\n            value={perPage}\n            onChange={handlePerPageSelectorChange}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={total}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={page => setCurrentPage(page)}\n      />\n      {visibleItems.map(item => {\n        return (\n          <li key={item} data-cy=\"item\">\n            {item}\n          </li>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}